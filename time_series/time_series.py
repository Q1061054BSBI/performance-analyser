#GRU
#ARIMA

# Цель:
# Идентифицировать факторы, влияющие на производительность системы, и на основе анализа временных рядов предоставить рекомендации по улучшению ключевых метрик.

# 1. Конкретные задачи
# 1.1. Прогнозирование ключевых метрик производительности
# Используя временные данные, спрогнозировать значения метрик, чтобы:

# Определить, как система будет работать в ближайшем будущем (например, через 10 минут).
# Выявить аномалии в поведении метрик (резкие скачки, замедления).
# 1.2. Анализ временных трендов
# Понять, как метрики изменяются во времени:

# Есть ли стабильные тренды или периодические пики (например, в вечерние часы)?
# Какие метрики влияют на ухудшение производительности?
# 1.3. Генерация рекомендаций
# На основе прогнозов и анализа:

# Указать, какие метрики нужно оптимизировать.
# Предложить конкретные действия для улучшения производительности.


# Формулировка задачи для моделей
# GRU:
# Использовать временные ряды response_time_ms, cpu_usage_avg, и memory_usage_mb за последние 30 минут.
# Построить прогноз на следующие 10 минут.
# Анализировать, как изменения в cpu_usage_avg или memory_usage_mb влияют на response_time_ms.
# ARIMA:
# Проанализировать временные ряды response_time_ms, чтобы:
# Найти тренды (например, постоянный рост времени ответа).
# Выявить автокорреляцию (например, задержки растут после загрузки памяти).
# Построить прогноз на следующие временные шаги (например, 2-3 шага по 5 минут).
